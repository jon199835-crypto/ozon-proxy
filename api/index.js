export default async function handler(req, res) {
  // –¢–í–û–ô –ê–ö–¢–£–ê–õ–¨–ù–´–ô EXEC-URL (–Ω–µ –º–µ–Ω—è–π –µ–≥–æ; –æ–±–Ω–æ–≤–ª—è–π –∫–æ–¥ –≤ GAS —á–µ—Ä–µ–∑ "Edit deployment")
  const GAS_EXEC_URL = "https://script.googleusercontent.com/macros/echo?user_content_key=AehSKLj_liTQatrUKYauo7s3NEhLzM4atcr8yNLFasO3zCB7j3sICi2CHE_FXh_jAfpSkGpG2Ms5wVyZSEgLlo_Uj9RgupTz3Tb0I9DGOeAsEdoBqRJoCHCS9QRuwG7e1fH77n5NtfhMb4so-nc4T5mKWun0VtdyvsDqWu8H0hzEvF97_3E6JrYqiJTEcLyJUfuHmneJGmbWPAHGG44UI8N92PDLmsZoOQiQw40-m8IApHR6Ws9ITA5mtwqZPLHeBNfdhxsuHPg65hrAGR2Yn27XXco6_stq2A&amp;lib=MWU1KQnTxyXH7F9CuBMTqaVnitNJBIhCK";

  if (req.method !== "POST") {
    try {
      // –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø—Ä–æ–∫—Å–∏—Ä—É–µ–º GET ‚Üí GAS doGet
      const r = await fetch(GAS_EXEC_URL, { method: "GET", redirect: "follow" });
      const text = await r.text();
      return res.status(200).send("üîó GAS –æ—Ç–≤–µ—Ç: " + text);
    } catch (err) {
      return res.status(200).send("Proxy GET error: " + err.message);
    }
  }

  try {
    // –ü—Ä–∏–Ω–∏–º–∞–µ–º –∞–ø–¥–µ–π—Ç –æ—Ç Telegram –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤ GAS
    const update = req.body; // —É Vercel body —É–∂–µ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω
    // –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –ø—É—Å—Ç–æ ‚Äî –ø–æ–¥—Å—Ç—Ä–∞—Ö—É–µ–º—Å—è:
    const safeUpdate = update && Object.keys(update).length ? update : { ping: true };

    const r = await fetch(GAS_EXEC_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(safeUpdate),
      redirect: "follow",            // –í–ê–ñ–ù–û: –ø–æ–∑–≤–æ–ª—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å exec –Ω–∞ googleusercontent
    });

    const text = await r.text();
    console.log("‚û°Ô∏è GAS status:", r.status, "body:", text);

    // Telegram —Å—á–∞—Å—Ç–ª–∏–≤ —Å –ª—é–±—ã–º 200 ‚Äî –æ—Ç–¥–∞—ë–º —Å—Ä–∞–∑—É
    return res.status(200).send("OK FORWARDED");
  } catch (err) {
    console.error("‚ùå Proxy POST error:", err);
    // –í—Å—ë —Ä–∞–≤–Ω–æ 200, —á—Ç–æ–±—ã Telegram –Ω–µ —Ä–µ—Ç—Ä–∞–∏–ª
    return res.status(200).send("Proxy error");
  }
}
